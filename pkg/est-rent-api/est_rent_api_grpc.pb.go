// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package est_rent_api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// EstRentApiServiceClient is the client API for EstRentApiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type EstRentApiServiceClient interface {
	// CreateRentV1 - Create a estate rent
	CreateRentV1(ctx context.Context, in *CreateRentV1Request, opts ...grpc.CallOption) (*CreateRentV1Response, error)
	// DescribeRentV1 - Describe a estate rent
	DescribeRentV1(ctx context.Context, in *DescribeRentV1Request, opts ...grpc.CallOption) (*DescribeRentV1Response, error)
	// ListRentV1 - List estate rent
	ListRentV1(ctx context.Context, in *ListRentV1Request, opts ...grpc.CallOption) (*ListRentV1Response, error)
	// RemoveRentV1 - Remove a estate rent
	RemoveRentV1(ctx context.Context, in *RemoveRentV1Request, opts ...grpc.CallOption) (*RemoveRentV1Response, error)
}

type estRentApiServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewEstRentApiServiceClient(cc grpc.ClientConnInterface) EstRentApiServiceClient {
	return &estRentApiServiceClient{cc}
}

func (c *estRentApiServiceClient) CreateRentV1(ctx context.Context, in *CreateRentV1Request, opts ...grpc.CallOption) (*CreateRentV1Response, error) {
	out := new(CreateRentV1Response)
	err := c.cc.Invoke(ctx, "/ozonmp.est_rent_api.v1.EstRentApiService/CreateRentV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *estRentApiServiceClient) DescribeRentV1(ctx context.Context, in *DescribeRentV1Request, opts ...grpc.CallOption) (*DescribeRentV1Response, error) {
	out := new(DescribeRentV1Response)
	err := c.cc.Invoke(ctx, "/ozonmp.est_rent_api.v1.EstRentApiService/DescribeRentV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *estRentApiServiceClient) ListRentV1(ctx context.Context, in *ListRentV1Request, opts ...grpc.CallOption) (*ListRentV1Response, error) {
	out := new(ListRentV1Response)
	err := c.cc.Invoke(ctx, "/ozonmp.est_rent_api.v1.EstRentApiService/ListRentV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *estRentApiServiceClient) RemoveRentV1(ctx context.Context, in *RemoveRentV1Request, opts ...grpc.CallOption) (*RemoveRentV1Response, error) {
	out := new(RemoveRentV1Response)
	err := c.cc.Invoke(ctx, "/ozonmp.est_rent_api.v1.EstRentApiService/RemoveRentV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EstRentApiServiceServer is the server API for EstRentApiService service.
// All implementations must embed UnimplementedEstRentApiServiceServer
// for forward compatibility
type EstRentApiServiceServer interface {
	// CreateRentV1 - Create a estate rent
	CreateRentV1(context.Context, *CreateRentV1Request) (*CreateRentV1Response, error)
	// DescribeRentV1 - Describe a estate rent
	DescribeRentV1(context.Context, *DescribeRentV1Request) (*DescribeRentV1Response, error)
	// ListRentV1 - List estate rent
	ListRentV1(context.Context, *ListRentV1Request) (*ListRentV1Response, error)
	// RemoveRentV1 - Remove a estate rent
	RemoveRentV1(context.Context, *RemoveRentV1Request) (*RemoveRentV1Response, error)
	mustEmbedUnimplementedEstRentApiServiceServer()
}

// UnimplementedEstRentApiServiceServer must be embedded to have forward compatible implementations.
type UnimplementedEstRentApiServiceServer struct {
}

func (UnimplementedEstRentApiServiceServer) CreateRentV1(context.Context, *CreateRentV1Request) (*CreateRentV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRentV1 not implemented")
}
func (UnimplementedEstRentApiServiceServer) DescribeRentV1(context.Context, *DescribeRentV1Request) (*DescribeRentV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DescribeRentV1 not implemented")
}
func (UnimplementedEstRentApiServiceServer) ListRentV1(context.Context, *ListRentV1Request) (*ListRentV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRentV1 not implemented")
}
func (UnimplementedEstRentApiServiceServer) RemoveRentV1(context.Context, *RemoveRentV1Request) (*RemoveRentV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveRentV1 not implemented")
}
func (UnimplementedEstRentApiServiceServer) mustEmbedUnimplementedEstRentApiServiceServer() {}

// UnsafeEstRentApiServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to EstRentApiServiceServer will
// result in compilation errors.
type UnsafeEstRentApiServiceServer interface {
	mustEmbedUnimplementedEstRentApiServiceServer()
}

func RegisterEstRentApiServiceServer(s grpc.ServiceRegistrar, srv EstRentApiServiceServer) {
	s.RegisterService(&EstRentApiService_ServiceDesc, srv)
}

func _EstRentApiService_CreateRentV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRentV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EstRentApiServiceServer).CreateRentV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ozonmp.est_rent_api.v1.EstRentApiService/CreateRentV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EstRentApiServiceServer).CreateRentV1(ctx, req.(*CreateRentV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _EstRentApiService_DescribeRentV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeRentV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EstRentApiServiceServer).DescribeRentV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ozonmp.est_rent_api.v1.EstRentApiService/DescribeRentV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EstRentApiServiceServer).DescribeRentV1(ctx, req.(*DescribeRentV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _EstRentApiService_ListRentV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRentV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EstRentApiServiceServer).ListRentV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ozonmp.est_rent_api.v1.EstRentApiService/ListRentV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EstRentApiServiceServer).ListRentV1(ctx, req.(*ListRentV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _EstRentApiService_RemoveRentV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRentV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EstRentApiServiceServer).RemoveRentV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ozonmp.est_rent_api.v1.EstRentApiService/RemoveRentV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EstRentApiServiceServer).RemoveRentV1(ctx, req.(*RemoveRentV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

// EstRentApiService_ServiceDesc is the grpc.ServiceDesc for EstRentApiService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var EstRentApiService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ozonmp.est_rent_api.v1.EstRentApiService",
	HandlerType: (*EstRentApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRentV1",
			Handler:    _EstRentApiService_CreateRentV1_Handler,
		},
		{
			MethodName: "DescribeRentV1",
			Handler:    _EstRentApiService_DescribeRentV1_Handler,
		},
		{
			MethodName: "ListRentV1",
			Handler:    _EstRentApiService_ListRentV1_Handler,
		},
		{
			MethodName: "RemoveRentV1",
			Handler:    _EstRentApiService_RemoveRentV1_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ozonmp/est_rent_api/v1/est_rent_api.proto",
}
